name: sciber-yklocker test and build

on:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/**'
      - 'tests/**'
      - 'setup.py'
      - 'tox.ini'
  release:
    types: [created]

permissions:
  contents: write # to enable releases

# Create one job per specified OS
jobs:
  yklocker_build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022] # Exclude macOS and Ubuntu by only including Windows
        python-version: ["3.11"]
        include:
          - os: windows-2022
            build_filename: yubikey-locker.exe
            msi_filename:  yubikey-locker.msi
            toxbuild: build_win
            
    # Get access to repo contents
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python # Get Python with the minimum required version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Windows specific install commands
      - if: matrix.os == 'windows-2022'
        name: "Windows specific dependencies" # Install necessary prerequisites
        run: |
          echo "Installing Windows specific dependencies"
          pip install winrt-Windows.ApplicationModel.LockScreen

      - name: Install dependencies # Common for all OS's
        run: |
          echo ${{github.ref}}
          python -m pip install --upgrade pip
          pip install tox

      # Run tests for Windows only
      - name: Install requirements.txt and run tests for ${{matrix.os}}
        run: |
          python -m tox

      # Build for Windows
      - name: Build for ${{matrix.os}}
        run: |
          python -m tox -e ${{matrix.toxbuild}}
          ls dist

      # Windows MSI build
      - if: matrix.os == 'windows-2022'
        name: "Windows MSI build"
        run: |
          dotnet tool install --global wix
          wix.exe build -arch x64 .\src\windows_utils\yubikey-locker.wxs
          cp .\src\windows_utils\${{matrix.msi_filename}} dist/${{matrix.msi_filename}}
          ls dist

      # Windows MSI install
      - if: matrix.os == 'windows-2022'
        name: "Windows MSI install"
        run: |
          $pwd = pwd
          $distPath = "dist\${{matrix.msi_filename}}"
          $msi = "$pwd\$distPath"
          echo $msi
          file $msi
          echo "log" > install_log
          echo "before msiexec"
          # -RunAsAdmin is a GitHub-actions command to elevate into admin
          msiexec /i "$msi" /quiet /li install_log #-RunAsAdmin
          echo "after msiexec"
          ls
          type install_log

      # Only publish files on release
      - if: github.event_name ==  'release'
        name: "Publish release files"
        uses: softprops/action-gh-release@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag_name: "${{github.ref_name}}"
          prerelease: False
          files: dist/*
